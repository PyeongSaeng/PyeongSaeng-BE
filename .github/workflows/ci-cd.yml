name: Deploy to AWS EC2 using Docker.

on:
  push:
    branches:
      - test

env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
  CONTAINER_NAME: pyeongsaeng-app
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  EC2_URL: ${{ secrets.EC2_URL }}
  EC2_USERNAME: ubuntu
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  EC2_PORT: 22
  DB_URL: ${{ secrets.DB_URL }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  S3_IAM_ACCESS_KEY: ${{ secrets.S3_IAM_ACCESS_KEY }}
  S3_IAM_SECRET_KEY: ${{ secrets.S3_IAM_SECRET_KEY }}
  S3_REGION: ${{ secrets.S3_REGION }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
  GOOGLE_GEO_API_KEY: ${{secrets.GOOGLE_GEO_API_KEY}}
  GOOGLE_MAPS_API_KEY: ${{secrets.GOOGLE_MAPS_API_KEY}}
  SMS_API_KEY: ${{ secrets.SMS_API_KEY }}
  SMS_SECRET_KEY: ${{ secrets.SMS_SECRET_KEY }}
  SMS_FROM_NUMBER: ${{ secrets.SMS_FROM_NUMBER }}
  ES_HOST: ${{secrets.ES_HOST}}
  ES_PASSWORD: ${{secrets.ES_PASSWORD}}
  ODCLOUD_SERVICE_KEY: ${{secrets.ODCLOUD_SERVICE_KEY}}
  OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Login to Docker Hub
        run: echo "${{ env.DOCKER_HUB_TOKEN }}" | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin

      - name: Push the Docker image
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Send docker-compose file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_URL }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          port: ${{ env.EC2_PORT }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_URL }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          port: ${{ env.EC2_PORT }}
          script: |
            cd /home/ubuntu/
            
            echo "Pulling latest image: ${{ env.DOCKER_IMAGE_NAME }}"
            sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
            
            echo "Starting all services with docker-compose..."
            sudo docker-compose -f docker-compose.yml up -d
